==> Exasim  ...
Using g++ compiler for CPU source code
Writing master into file...
run facenumbering...
run elementpartition...
run facepartition...
face partition 1
Writing initial solution into file 1...
Writing mesh into file 1...
Writing app into file...
generate code...
Using g++ compiler for CPU source code
Writing master into file...
run facenumbering...
run elementpartition...
run facepartition...
face partition 1
Writing initial solution into file 1...
Writing mesh into file 1...
Writing app into file...
generate code...
compile code...
ar: creating archive opuApp.a
a - opuApp.o
run code...
datain1/
dataout1/out
datain2/
dataout2/out
Using 1 processors to solve the problem on CPU platform...
Reading data from binary files 
Set common struct... 
Precompute index arrays... 
finish cpuInit... 
Reading data from binary files 
Set common struct... 
Precompute index arrays... 
finish cpuInit... 
PTC Iteration: 0,  PTC Param: 0,  Solution Norm: 0
Old RHS Norm: 0.423402,  New RHS Norm: 0.423402
GMRES converges to the tolerance 0.001 within  21 iterations and 0 RB dimensions
PTC Iteration: 1,  Residual Norm: 0.000402598
Old RHS Norm: 0.000402598,  New RHS Norm: 0.000402598
GMRES converges to the tolerance 0.001 within  35 iterations and 1 RB dimensions
PTC Iteration: 2,  Residual Norm: 3.76177e-07
PTC Iteration: 0,  PTC Param: 0,  Solution Norm: 0
Old RHS Norm: 0.423402,  New RHS Norm: 0.423402
GMRES converges to the tolerance 0.001 within  57 iterations and 0 RB dimensions
PTC Iteration: 1,  Residual Norm: 0.000417032
Old RHS Norm: 0.000417032,  New RHS Norm: 0.000317557
GMRES converges to the tolerance 0.001 within  105 iterations and 1 RB dimensions
PTC Iteration: 2,  Residual Norm: 4.12791e-07
