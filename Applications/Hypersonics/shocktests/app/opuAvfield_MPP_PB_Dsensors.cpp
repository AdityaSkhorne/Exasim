template <typename T> void opuAvfield(T *f, T *xdg, T *udg, T *odg, T *wdg, T *uinf, T *param, T time, int modelnumber, int ng, int nc, int ncu, int nd, int ncx, int nco, int ncw, int nce, int npe, int ne, Mutation::Mixture *mix)
{
	for (int i = 0; i <ng; i++) {
		int j = i%npe;
		int k = (i-j)/npe;
		T param1 = param[0];
		T param2 = param[1];
		T param3 = param[2];
		T param4 = param[3];
		T param5 = param[4];
		T param15 = param[14];
		T param16 = param[15];
		T param17 = param[16];
		T param18 = param[17];
		T uinf1 = uinf[0];
		T uinf2 = uinf[1];
		T uinf3 = uinf[2];
		T xdg1 = xdg[j+npe*0+npe*ncx*k];
		T udg1 = udg[j+npe*0+npe*nc*k];
		T udg2 = udg[j+npe*1+npe*nc*k];
		T udg3 = udg[j+npe*2+npe*nc*k];
		T udg4 = udg[j+npe*3+npe*nc*k];
		T udg5 = udg[j+npe*4+npe*nc*k];
		T udg6 = udg[j+npe*5+npe*nc*k];
		T udg7 = udg[j+npe*6+npe*nc*k];
		T udg8 = udg[j+npe*7+npe*nc*k];
		T udg9 = udg[j+npe*8+npe*nc*k];
		T udg10 = udg[j+npe*9+npe*nc*k];
		T udg11 = udg[j+npe*10+npe*nc*k];
		T udg12 = udg[j+npe*11+npe*nc*k];
		T udg13 = udg[j+npe*12+npe*nc*k];
		T udg14 = udg[j+npe*13+npe*nc*k];
		T odg1 = odg[j+npe*0+npe*nco*k];
		T odg2 = odg[j+npe*1+npe*nco*k];
		T odg3 = odg[j+npe*2+npe*nco*k];
		T odg4 = odg[j+npe*3+npe*nco*k];
		T odg5 = odg[j+npe*4+npe*nco*k];
		T odg6 = odg[j+npe*5+npe*nco*k];
		T odg7 = odg[j+npe*6+npe*nco*k];
		T odg8 = odg[j+npe*7+npe*nco*k];
		T odg9 = odg[j+npe*8+npe*nco*k];

        T t1pi = 1.0/3.141592653589793;
		udg1 = udg1*(t1pi*atan(udg1*1.0E+12)+1.0/2.0)+3.182454300088011e-13;
		udg2 = udg2*(t1pi*atan(udg2*1.0E+12)+1.0/2.0)+3.182454300088011e-13;
		udg3 = udg3*(t1pi*atan(udg3*1.0E+12)+1.0/2.0)+3.182454300088011e-13;
		udg4 = udg4*(t1pi*atan(udg4*1.0E+12)+1.0/2.0)+3.182454300088011e-13;
		udg5 = udg5*(t1pi*atan(udg5*1.0E+12)+1.0/2.0)+3.182454300088011e-13;

		int nspecies = 5;
		double rho_scale = uinf[0];
		double u_scale = uinf[1];
		double rhoe_scale = uinf[2];

		double Ucons[7] = {udg1, udg2, udg3, udg4, udg5, udg6, udg7};
		double Ustate[6];
		dimensionalizeConsVars(Ucons, (double*)uinf, nspecies, 1);
		conservativeToState(Ucons, Ustate, (double*)uinf, nspecies, 1);
		double rhovec[5] = {Ustate[0],Ustate[1],Ustate[2],Ustate[3],Ustate[4]};
		double rhoe = Ustate[nspecies];
		mix->setState(rhovec, &rhoe, 0);

		uinf1 = mix->P()/rhoe_scale; // pressure
		uinf2 = mix->mixtureFrozenGamma(); // gamma
        uinf3 = (mix->frozenThermalConductivity() / uinf[5]) / (mix->viscosity() / uinf[4]); // cp / Pr^*
        // uinf3 = 0.0;
        // uinf3 = 1.0/0.9;


		T t2 = udg6*udg6;
		T t3 = uinf2*2.0;
		T t4 = uinf2+1.0;
		T t5 = 1.0/3.141592653589793;
		T t6 = -param18;
		T t7 = 1.0/param15;
		T t10 = udg8+udg9+udg10+udg11+udg12;
		T t11 = param17*1.0E+12;
		T t12 = param18*1.0E+12;
		T t13 = udg1*1.0E+12;
		T t14 = udg2*1.0E+12;
		T t15 = udg3*1.0E+12;
		T t16 = udg4*1.0E+12;
		T t17 = udg5*1.0E+12;
		T t8 = t3-2.0;
		T t9 = 1.0/t4;
		T t18 = atan(t13);
		T t19 = atan(t14);
		T t20 = atan(t15);
		T t21 = atan(t16);
		T t22 = atan(t17);
		T t23 = -t12;
		T t24 = t5*t18;
		T t25 = t5*t19;
		T t26 = t5*t20;
		T t27 = t5*t21;
		T t28 = t5*t22;
		T t29 = t24+1.0/2.0;
		T t30 = t25+1.0/2.0;
		T t31 = t26+1.0/2.0;
		T t32 = t27+1.0/2.0;
		T t33 = t28+1.0/2.0;
		T t34 = t29*udg1;
		T t35 = t30*udg2;
		T t36 = t31*udg3;
		T t37 = t32*udg4;
		T t38 = t33*udg5;
		T t39 = t34+3.182454300088011E-13;
		T t40 = t35+3.182454300088011E-13;
		T t41 = t36+3.182454300088011E-13;
		T t42 = t37+3.182454300088011E-13;
		T t43 = t38+3.182454300088011E-13;
		T t44 = t34+t35+t36+t37+t38+1.591227150044006E-12;
		T t45 = 1.0/t44;
		T t46 = t45*t45;
		T t47 = t45*udg7;
		T t48 = t45*uinf1;
		T t50 = t10*t45*udg6;
		T t55 = t10*t39*t45;
		T t56 = t10*t40*t45;
		T t57 = t10*t41*t45;
		T t58 = t10*t42*t45;
		T t59 = t10*t43*t45;
		T t49 = t2*t46;
		T t51 = -t50;
		T t53 = t47*1.0E+12;
		T t54 = t48*1.0E+12;
		T t60 = -t55;
		T t61 = -t56;
		T t62 = -t57;
		T t63 = -t58;
		T t64 = -t59;
		T t70 = -t45*(t50-udg13);
		T t71 = t47+t48-1.0E-4;
		T t73 = t45*(t50-udg13)*-1.0E+12;
		T t82 = -odg9*t7*t45*(t55-udg8);
		T t83 = -odg9*t7*t45*(t56-udg9);
		T t84 = -odg9*t7*t45*(t57-udg10);
		T t85 = -odg9*t7*t45*(t58-udg11);
		T t86 = -odg9*t7*t45*(t59-udg12);
		T t92 = odg9*t7*t45*(t55-udg8)*-1.0E+12;
		T t93 = odg9*t7*t45*(t56-udg9)*-1.0E+12;
		T t94 = odg9*t7*t45*(t57-udg10)*-1.0E+12;
		T t95 = odg9*t7*t45*(t58-udg11)*-1.0E+12;
		T t96 = odg9*t7*t45*(t59-udg12)*-1.0E+12;
		T t52 = t51+udg13;
		T t65 = t60+udg8;
		T t66 = t61+udg9;
		T t67 = t62+udg10;
		T t68 = t63+udg11;
		T t69 = t64+udg12;
		T t72 = t70-1.0E+4;
		T t74 = t53+t54-1.0E+8;
		T t76 = t73-1.0E+16;
		T t87 = param17+t82;
		T t88 = param17+t83;
		T t89 = param17+t84;
		T t90 = param17+t85;
		T t91 = param17+t86;
		T t97 = t11+t92;
		T t98 = t11+t93;
		T t99 = t11+t94;
		T t100 = t11+t95;
		T t101 = t11+t96;
		T t75 = atan(t74);
		T t77 = atan(t76);
		T t102 = atan(t97);
		T t103 = atan(t98);
		T t104 = atan(t99);
		T t105 = atan(t100);
		T t106 = atan(t101);
		T t78 = t5*t75;
		T t80 = t5*t77;
		T t107 = t5*t102;
		T t108 = t5*t103;
		T t109 = t5*t104;
		T t110 = t5*t105;
		T t111 = t5*t106;
		T t79 = t78+1.0/2.0;
		T t81 = t80-1.0/2.0;
		T t112 = t107-1.0/2.0;
		T t113 = t108-1.0/2.0;
		T t114 = t109-1.0/2.0;
		T t115 = t110-1.0/2.0;
		T t116 = t111-1.0/2.0;
		T t117 = t71*t79;
		T t118 = -t81*(t45*(t50-udg13)+1.0E+4);
		T t119 = t81*(t45*(t50-udg13)+1.0E+4);
		T t129 = t87*t112;
		T t130 = t88*t113;
		T t131 = t89*t114;
		T t132 = t90*t115;
		T t133 = t91*t116;
		T t120 = t119*-1.0E+12;
		T t121 = t117+1.000000003182454E-4;
		T t123 = t118-2.0E+4;
		T t122 = t8*t9*t121;
		T t125 = t120-2.0E+16;
		T t124 = 1.0/sqrt(t122);
		T t126 = atan(t125);
		T t134 = t49+t122;
		T t127 = t5*t126;
		T t135 = sqrt(t134);
		T t128 = t127+1.0/2.0;
		T t136 = -t128*(t119+2.0E+4);
		T t137 = t119+t136+1.0E+4;
		T t138 = odg9*t7*t124*t137;
		T t139 = -t138;
		T t141 = t138*1.0E+12;
		T t140 = param17+t139;
		T t142 = -t141;
		T t143 = t11+t142;
		T t144 = atan(t143);
		T t145 = t5*t144;
		T t146 = t145-1.0/2.0;
		T t147 = t140*t146;
		T t148 = t147*1.0E+12;
		T t149 = t6+t147+3.182454300088011E-13;
		T t150 = t23+t148+3.182454300088011E-1;
		T t151 = atan(t150);
		T t152 = t5*t151;
		T t153 = t152+1.0/2.0;
		T t154 = t149*t153;
		T t155 = -t154;
		T t156 = t147+t155;
		f[j+npe*0+npe*nce*k] = odg9*param16*t7*t44*t135*t156;
		f[j+npe*1+npe*nce*k] = 0.0;
		f[j+npe*2+npe*nce*k] = odg9*param16*t7*t44*t135*t156*uinf3;
		f[j+npe*3+npe*nce*k] = odg9*t7*t44*t135*(t129-(t5*atan(t23+t129*1.0E+12+3.182454300088011E-1)+1.0/2.0)*(t6+t129+3.182454300088011E-13));
		f[j+npe*4+npe*nce*k] = odg9*t7*t44*t135*(t130-(t5*atan(t23+t130*1.0E+12+3.182454300088011E-1)+1.0/2.0)*(t6+t130+3.182454300088011E-13));
		f[j+npe*5+npe*nce*k] = odg9*t7*t44*t135*(t131-(t5*atan(t23+t131*1.0E+12+3.182454300088011E-1)+1.0/2.0)*(t6+t131+3.182454300088011E-13));
		f[j+npe*6+npe*nce*k] = odg9*t7*t44*t135*(t132-(t5*atan(t23+t132*1.0E+12+3.182454300088011E-1)+1.0/2.0)*(t6+t132+3.182454300088011E-13));
		f[j+npe*7+npe*nce*k] = odg9*t7*t44*t135*(t133-(t5*atan(t23+t133*1.0E+12+3.182454300088011E-1)+1.0/2.0)*(t6+t133+3.182454300088011E-13));

	}
}

template void opuAvfield(double *, double *, double *, double *, double *, double *, double *, double, int, int, int, int, int, int, int, int, int, int, int, Mutation::Mixture *);
template void opuAvfield(float *, float *, float *, float *, float *, float *, float *, float, int, int, int, int, int, int, int, int, int, int, int, Mutation::Mixture *);
