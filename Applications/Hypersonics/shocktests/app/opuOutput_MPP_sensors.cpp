template <typename T> void opuOutput(T *f, T *xdg, T *udg, T *odg, T *wdg, T *uinf, T *param, T time, int modelnumber, int ng, int nc, int ncu, int nd, int ncx, int nco, int ncw, int nce, int npe, int ne, Mutation::Mixture *mix)
{
    double Uwork[5];
    double dTdU[6];
    int nspecies = 5;
    int ndim = 1;
    double rho_scale = uinf[0];
    double u_scale = uinf[1];
    double rhoe_scale = uinf[2];
	for (int i = 0; i <ng; i++) {
		int j = i%npe;
		int k = (i-j)/npe;
		T param1 = param[0];
		T param15 = param[14];
		T uinf1 = uinf[0];  // p
		T uinf2 = uinf[1];  // gam
		T uinf13 = uinf[12]; // dT_drho_1
		T uinf14 = uinf[13]; // dT_drho_2
		T uinf15 = uinf[14]; // dT_drho_3
		T uinf16 = uinf[15]; // dT_drho_4
		T uinf17 = uinf[16]; // dT_drho_5
		T uinf18 = uinf[17]; // dT_drhoe
		T xdg1 = xdg[j+npe*0+npe*ncx*k];
		T udg1 = udg[j+npe*0+npe*nc*k];
		T udg2 = udg[j+npe*1+npe*nc*k];
		T udg3 = udg[j+npe*2+npe*nc*k];
		T udg4 = udg[j+npe*3+npe*nc*k];
		T udg5 = udg[j+npe*4+npe*nc*k];
		T udg6 = udg[j+npe*5+npe*nc*k];
		T udg7 = udg[j+npe*6+npe*nc*k];
		T udg8 = udg[j+npe*7+npe*nc*k];
		T udg9 = udg[j+npe*8+npe*nc*k];
		T udg10 = udg[j+npe*9+npe*nc*k];
		T udg11 = udg[j+npe*10+npe*nc*k];
		T udg12 = udg[j+npe*11+npe*nc*k];
		T udg13 = udg[j+npe*12+npe*nc*k];
		T udg14 = udg[j+npe*13+npe*nc*k];
		T odg1 = odg[j+npe*0+npe*nco*k];
		T odg2 = odg[j+npe*1+npe*nco*k];

		T t1pi = 1.0/3.141592653589793;
        udg1 = udg1*(t1pi*atan(udg1*1.0E+12)+1.0/2.0)+3.182454300088011e-13;
		udg2 = udg2*(t1pi*atan(udg2*1.0E+12)+1.0/2.0)+3.182454300088011e-13;
		udg3 = udg3*(t1pi*atan(udg3*1.0E+12)+1.0/2.0)+3.182454300088011e-13;
		udg4 = udg4*(t1pi*atan(udg4*1.0E+12)+1.0/2.0)+3.182454300088011e-13;
		udg5 = udg5*(t1pi*atan(udg5*1.0E+12)+1.0/2.0)+3.182454300088011e-13;

		double Ucons[7] = {udg1, udg2, udg3, udg4, udg5, udg6, udg7};
		double Ustate[6];
		dimensionalizeConsVars(Ucons, (double*)uinf, nspecies, 1);
		conservativeToState(Ucons, Ustate, (double*)uinf, nspecies, 1);
		double rhovec[5] = {Ustate[0],Ustate[1],Ustate[2],Ustate[3],Ustate[4]};
		double rhoe = Ustate[nspecies];

		mix->setState(rhovec, &rhoe, 0);
		uinf1 = mix->P()/rhoe_scale;
        uinf2 = mix->mixtureFrozenGamma();
        dT_dUstate(dTdU, Ustate, Uwork, nspecies, ndim, mix);
        nondimensionalize_dT_dUstate(dTdU, (double*)uinf, nspecies, nd);
        uinf13 = dTdU[0]; // dT_drho_1
		uinf14 = dTdU[1]; // dT_drho_2
		uinf15 = dTdU[2]; // dT_drho_3
		uinf16 = dTdU[3]; // dT_drho_4
		uinf17 = dTdU[4]; // dT_drho_5
		uinf18 = dTdU[5]; // dT_drhoe

		// T t2 = udg1*udg1;
		// T t3 = udg2*udg2;
		// T t4 = udg3*udg3;
		// T t5 = udg4*udg4;
		// T t6 = udg5*udg5;
		// T t7 = 1.0/3.141592653589793;
		// T t8 = 1.0/param15;
		// T t9 = udg1*1.0E+12;
		// T t10 = udg2*1.0E+12;
		// T t11 = udg3*1.0E+12;
		// T t12 = udg4*1.0E+12;
		// T t13 = udg5*1.0E+12;
		// T t14 = atan(t9);
		// T t15 = atan(t10);
		// T t16 = atan(t11);
		// T t17 = atan(t12);
		// T t18 = atan(t13);
		// T t34 = t2*1.0E+24;
		// T t35 = t3*1.0E+24;
		// T t36 = t4*1.0E+24;
		// T t37 = t5*1.0E+24;
		// T t38 = t6*1.0E+24;
		// T t19 = t7*t14;
		// T t20 = t7*t15;
		// T t21 = t7*t16;
		// T t22 = t7*t17;
		// T t23 = t7*t18;
		// T t39 = t34+1.0;
		// T t40 = t35+1.0;
		// T t41 = t36+1.0;
		// T t42 = t37+1.0;
		// T t43 = t38+1.0;
		// T t24 = t19+1.0/2.0;
		// T t25 = t20+1.0/2.0;
		// T t26 = t21+1.0/2.0;
		// T t27 = t22+1.0/2.0;
		// T t28 = t23+1.0/2.0;
		// T t44 = 1.0/t39;
		// T t45 = 1.0/t40;
		// T t46 = 1.0/t41;
		// T t47 = 1.0/t42;
		// T t48 = 1.0/t43;
		// T t29 = t24*udg1;
		// T t30 = t25*udg2;
		// T t31 = t26*udg3;
		// T t32 = t27*udg4;
		// T t33 = t28*udg5;
		// T t49 = t7*t9*t44;
		// T t50 = t7*t10*t45;
		// T t51 = t7*t11*t46;
		// T t52 = t7*t12*t47;
		// T t53 = t7*t13*t48;
		// T t54 = t24+t49;
		// T t55 = t25+t50;
		// T t56 = t26+t51;
		// T t57 = t27+t52;
		// T t58 = t28+t53;
		// T t64 = t29+t30+t31+t32+t33+1.591227150044006E-12;
		// T t59 = t54*udg8;
		// T t60 = t55*udg9;
		// T t61 = t56*udg10;
		// T t62 = t57*udg11;
		// T t63 = t58*udg12;
		// T t65 = 1.0/t64;
		// T t66 = t59+t60+t61+t62+t63;
		// T t67 = t65*t66*udg6;
		// T t68 = -t67;
		// T t70 = -t65*(t67-udg13);
		// T t72 = t65*(t67-udg13)*-1.0E+12;
		// T t69 = t68+udg13;
		// T t71 = t70-1.0E+4;
		// T t73 = t72-1.0E+16;
		// T t74 = atan(t73);
		// T t75 = t7*t74;
		// T t76 = t75-1.0/2.0;
		// T t77 = -t76*(t65*(t67-udg13)+1.0E+4);
		// f[j+npe*0+npe*nce*k] = odg2*t8*(-(t76*(t65*(t67-udg13)+1.0E+4)+2.0E+4)*(t7*atan(t76*(t65*(t67-udg13)+1.0E+4)*-1.0E+12-2.0E+16)+1.0/2.0)+t76*(t65*(t67-udg13)+1.0E+4)+1.0E+4)*1.0/sqrt(((uinf2*2.0-2.0)*((t7*atan(t65*udg7*1.0E+12+t65*uinf1*1.0E+12-1.0E+8)+1.0/2.0)*(t65*udg7+t65*uinf1-1.0E-4)+1.000000003182454E-4))/(uinf2+1.0));
		// f[j+npe*1+npe*nce*k] = -odg2*t8*(t59*uinf13+t60*uinf14+t61*uinf15+t62*uinf16+t63*uinf17+uinf18*(udg6+udg14-(t65*t67*udg6)/2.0));
		// f[j+npe*2+npe*nce*k] = -odg2*t8*t65*(t59-t65*t66*(t29+3.182454300088011E-13));
		// f[j+npe*3+npe*nce*k] = -odg2*t8*t65*(t60-t65*t66*(t30+3.182454300088011E-13));
		// f[j+npe*4+npe*nce*k] = -odg2*t8*t65*(t61-t65*t66*(t31+3.182454300088011E-13));
		// f[j+npe*5+npe*nce*k] = -odg2*t8*t65*(t62-t65*t66*(t32+3.182454300088011E-13));
		// f[j+npe*6+npe*nce*k] = -odg2*t8*t65*(t63-t65*t66*(t33+3.182454300088011E-13));
		// f[j+npe*7+npe*nce*k] = mix->T() / uinf[3];
		// f[j+npe*8+npe*nce*k] = mix->mixtureFrozenCpMass() * mix->viscosity() / mix->frozenThermalConductivity();
		// f[j+npe*9+npe*nce*k] = mix->frozenThermalConductivity() / mix->viscosity() ;

				T t2 = udg1*udg1;
		T t3 = udg2*udg2;
		T t4 = udg3*udg3;
		T t5 = udg4*udg4;
		T t6 = udg5*udg5;
		T t7 = 1.0/3.141592653589793;
		T t8 = 1.0/param15;
		T t9 = udg1*1.0E+12;
		T t10 = udg2*1.0E+12;
		T t11 = udg3*1.0E+12;
		T t12 = udg4*1.0E+12;
		T t13 = udg5*1.0E+12;
		T t14 = atan(t9);
		T t15 = atan(t10);
		T t16 = atan(t11);
		T t17 = atan(t12);
		T t18 = atan(t13);
		T t34 = t2*1.0E+24;
		T t35 = t3*1.0E+24;
		T t36 = t4*1.0E+24;
		T t37 = t5*1.0E+24;
		T t38 = t6*1.0E+24;
		T t19 = t7*t14;
		T t20 = t7*t15;
		T t21 = t7*t16;
		T t22 = t7*t17;
		T t23 = t7*t18;
		T t39 = t34+1.0;
		T t40 = t35+1.0;
		T t41 = t36+1.0;
		T t42 = t37+1.0;
		T t43 = t38+1.0;
		T t24 = t19+1.0/2.0;
		T t25 = t20+1.0/2.0;
		T t26 = t21+1.0/2.0;
		T t27 = t22+1.0/2.0;
		T t28 = t23+1.0/2.0;
		T t44 = 1.0/t39;
		T t45 = 1.0/t40;
		T t46 = 1.0/t41;
		T t47 = 1.0/t42;
		T t48 = 1.0/t43;
		T t29 = t24*udg1;
		T t30 = t25*udg2;
		T t31 = t26*udg3;
		T t32 = t27*udg4;
		T t33 = t28*udg5;
		T t49 = t7*t9*t44;
		T t50 = t7*t10*t45;
		T t51 = t7*t11*t46;
		T t52 = t7*t12*t47;
		T t53 = t7*t13*t48;
		T t54 = t24+t49;
		T t55 = t25+t50;
		T t56 = t26+t51;
		T t57 = t27+t52;
		T t58 = t28+t53;
		T t64 = t29+t30+t31+t32+t33+1.591227150044006E-12;
		T t59 = t54*udg8;
		T t60 = t55*udg9;
		T t61 = t56*udg10;
		T t62 = t57*udg11;
		T t63 = t58*udg12;
		T t65 = 1.0/t64;
		T t66 = t59+t60+t61+t62+t63;
		T t67 = t65*t66*udg6;
		T t68 = -t67;
		T t70 = -t65*(t67-udg13);
		T t72 = t65*(t67-udg13)*-1.0E+12;
		T t69 = t68+udg13;
		T t71 = t70-1.0E+4;
		T t73 = t72-1.0E+16;
		T t74 = atan(t73);
		T t75 = t7*t74;
		T t76 = t75-1.0/2.0;
		T t77 = -t76*(t65*(t67-udg13)+1.0E+4);
		f[j+npe*0+npe*nce*k] = odg2*t8*(-(t76*(t65*(t67-udg13)+1.0E+4)+2.0E+4)*(t7*atan(t76*(t65*(t67-udg13)+1.0E+4)*-1.0E+12-2.0E+16)+1.0/2.0)+t76*(t65*(t67-udg13)+1.0E+4)+1.0E+4)*1.0/sqrt(((uinf2*2.0-2.0)*((t7*atan(t65*udg7*1.0E+12+t65*uinf1*1.0E+12-1.0E+8)+1.0/2.0)*(t65*udg7+t65*uinf1-1.0E-4)+1.000000003182454E-4))/(uinf2+1.0));
		f[j+npe*1+npe*nce*k] = -odg2*t8*(t59*uinf13+t60*uinf14+t61*uinf15+t62*uinf16+t63*uinf17+uinf18*(udg14-(t65*t67*udg6)/2.0+t65*udg6*(t67-udg13)));
		f[j+npe*2+npe*nce*k] = -odg2*t8*t65*(t59-t65*t66*(t29+3.182454300088011E-13));
		f[j+npe*3+npe*nce*k] = -odg2*t8*t65*(t60-t65*t66*(t30+3.182454300088011E-13));
		f[j+npe*4+npe*nce*k] = -odg2*t8*t65*(t61-t65*t66*(t31+3.182454300088011E-13));
		f[j+npe*5+npe*nce*k] = -odg2*t8*t65*(t62-t65*t66*(t32+3.182454300088011E-13));
		f[j+npe*6+npe*nce*k] = -odg2*t8*t65*(t63-t65*t66*(t33+3.182454300088011E-13));
		f[j+npe*7+npe*nce*k] = mix->T() / uinf[3];
		f[j+npe*8+npe*nce*k] = mix->mixtureFrozenCpMass() * mix->viscosity() / mix->frozenThermalConductivity();
		f[j+npe*9+npe*nce*k] = mix->frozenThermalConductivity() / mix->viscosity() ;

	}
}

template void opuOutput(double *, double *, double *, double *, double *, double *, double *, double, int, int, int, int, int, int, int, int, int, int, int, Mutation::Mixture *);
template void opuOutput(float *, float *, float *, float *, float *, float *, float *, float, int, int, int, int, int, int, int, int, int, int, int, Mutation::Mixture *);
