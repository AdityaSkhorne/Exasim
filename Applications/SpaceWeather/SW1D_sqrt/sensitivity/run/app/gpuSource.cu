template <typename T>  __device__  void devicegpuSource(T *f, T *xdg, T *udg, T *odg, T *wdg, T *uinf, T *param, T time, int modelnumber, int ng, int nc, int ncu, int nd, int ncx, int nco, int ncw)
{
	int i = threadIdx.x + blockIdx.x * blockDim.x;
	while (i<ng) {
		T param1 = param[0];
		T param2 = param[1];
		T param3 = param[2];
		T param4 = param[3];
		T param5 = param[4];
		T param6 = param[5];
		T param7 = param[6];
		T param8 = param[7];
		T param9 = param[8];
		T param10 = param[9];
		T param11 = param[10];
		T param12 = param[11];
		T param13 = param[12];
		T param14 = param[13];
		T param15 = param[14];
		T param16 = param[15];
		T param17 = param[16];
		T param18 = param[17];
		T param19 = param[18];
		T uinf1 = uinf[0];
		T uinf2 = uinf[1];
		T uinf3 = uinf[2];
		T uinf4 = uinf[3];
		T uinf5 = uinf[4];
		T uinf6 = uinf[5];
		T uinf7 = uinf[6];
		T uinf8 = uinf[7];
		T uinf9 = uinf[8];
		T uinf10 = uinf[9];
		T uinf11 = uinf[10];
		T uinf12 = uinf[11];
		T uinf13 = uinf[12];
		T uinf14 = uinf[13];
		T uinf15 = uinf[14];
		T uinf16 = uinf[15];
		T uinf17 = uinf[16];
		T uinf18 = uinf[17];
		T uinf19 = uinf[18];
		T uinf20 = uinf[19];
		T uinf21 = uinf[20];
		T uinf22 = uinf[21];
		T uinf23 = uinf[22];
		T uinf24 = uinf[23];
		T uinf25 = uinf[24];
		T uinf26 = uinf[25];
		T uinf27 = uinf[26];
		T uinf28 = uinf[27];
		T uinf29 = uinf[28];
		T uinf30 = uinf[29];
		T uinf31 = uinf[30];
		T uinf32 = uinf[31];
		T uinf33 = uinf[32];
		T uinf34 = uinf[33];
		T uinf35 = uinf[34];
		T uinf36 = uinf[35];
		T uinf37 = uinf[36];
		T uinf38 = uinf[37];
		T uinf39 = uinf[38];
		T uinf40 = uinf[39];
		T uinf41 = uinf[40];
		T uinf42 = uinf[41];
		T uinf43 = uinf[42];
		T uinf44 = uinf[43];
		T uinf45 = uinf[44];
		T uinf46 = uinf[45];
		T uinf47 = uinf[46];
		T uinf48 = uinf[47];
		T uinf49 = uinf[48];
		T uinf50 = uinf[49];
		T uinf51 = uinf[50];
		T uinf52 = uinf[51];
		T uinf53 = uinf[52];
		T uinf54 = uinf[53];
		T uinf55 = uinf[54];
		T uinf56 = uinf[55];
		T uinf57 = uinf[56];
		T uinf58 = uinf[57];
		T uinf59 = uinf[58];
		T uinf60 = uinf[59];
		T uinf61 = uinf[60];
		T uinf62 = uinf[61];
		T uinf63 = uinf[62];
		T uinf64 = uinf[63];
		T uinf65 = uinf[64];
		T uinf66 = uinf[65];
		T uinf67 = uinf[66];
		T uinf68 = uinf[67];
		T uinf69 = uinf[68];
		T uinf70 = uinf[69];
		T uinf71 = uinf[70];
		T uinf72 = uinf[71];
		T uinf73 = uinf[72];
		T uinf74 = uinf[73];
		T uinf75 = uinf[74];
		T uinf76 = uinf[75];
		T uinf77 = uinf[76];
		T uinf78 = uinf[77];
		T uinf79 = uinf[78];
		T uinf80 = uinf[79];
		T uinf81 = uinf[80];
		T uinf82 = uinf[81];
		T uinf83 = uinf[82];
		T uinf84 = uinf[83];
		T uinf85 = uinf[84];
		T uinf86 = uinf[85];
		T uinf87 = uinf[86];
		T uinf88 = uinf[87];
		T uinf89 = uinf[88];
		T uinf90 = uinf[89];
		T uinf91 = uinf[90];
		T uinf92 = uinf[91];
		T uinf93 = uinf[92];
		T uinf94 = uinf[93];
		T uinf95 = uinf[94];
		T uinf96 = uinf[95];
		T uinf97 = uinf[96];
		T uinf98 = uinf[97];
		T uinf99 = uinf[98];
		T uinf100 = uinf[99];
		T uinf101 = uinf[100];
		T uinf102 = uinf[101];
		T uinf103 = uinf[102];
		T uinf104 = uinf[103];
		T uinf105 = uinf[104];
		T uinf106 = uinf[105];
		T uinf107 = uinf[106];
		T uinf108 = uinf[107];
		T uinf109 = uinf[108];
		T uinf110 = uinf[109];
		T uinf111 = uinf[110];
		T uinf112 = uinf[111];
		T uinf113 = uinf[112];
		T uinf114 = uinf[113];
		T uinf115 = uinf[114];
		T uinf116 = uinf[115];
		T uinf117 = uinf[116];
		T uinf118 = uinf[117];
		T uinf119 = uinf[118];
		T uinf120 = uinf[119];
		T uinf121 = uinf[120];
		T uinf122 = uinf[121];
		T uinf123 = uinf[122];
		T uinf124 = uinf[123];
		T uinf125 = uinf[124];
		T uinf126 = uinf[125];
		T uinf127 = uinf[126];
		T uinf128 = uinf[127];
		T uinf129 = uinf[128];
		T uinf130 = uinf[129];
		T uinf131 = uinf[130];
		T uinf132 = uinf[131];
		T uinf133 = uinf[132];
		T uinf134 = uinf[133];
		T uinf135 = uinf[134];
		T uinf136 = uinf[135];
		T uinf137 = uinf[136];
		T uinf138 = uinf[137];
		T uinf139 = uinf[138];
		T uinf140 = uinf[139];
		T uinf141 = uinf[140];
		T uinf142 = uinf[141];
		T uinf143 = uinf[142];
		T uinf144 = uinf[143];
		T uinf145 = uinf[144];
		T uinf146 = uinf[145];
		T uinf147 = uinf[146];
		T uinf148 = uinf[147];
		T xdg1 = xdg[0*ng+i];
		T udg1 = udg[0*ng+i];
		T udg2 = udg[1*ng+i];
		T udg3 = udg[2*ng+i];
		T udg4 = udg[3*ng+i];
		T udg5 = udg[4*ng+i];
		T udg6 = udg[5*ng+i];
		T x0 = 1.0/xdg1;
		T x1 = param14*x0;
		T x2 = exp(udg1);
		T x3 = sqrt(x2);
		T x4 = 1.0/x3;
		T x5 = udg2*x4;
		T x6 = x1*x5;
		T x7 = udg5*x4;
		T x8 = 0.5*udg4;
		T x9 = x5*x8 - x7;
		T x10 = 1.0/param1;
		T x11 = pow(param10, 2);
		T x12 = pow(xdg1, 2);
		T x13 = 1.0/x12;
		T x14 = pow(param1*param2, -1.0/2.0);
		T x15 = udg3*x4;
		T x16 = sqrt(x15);
		T x17 = x14*x16*x4;
		T x18 = tanh(20000.0*uinf75 + 199.99999999999994);
		T x19 = (1.0/180.0)*M_PI;
		T x20 = param16*x19;
		T x21 = param17*x19;
		T x22 = sin(x20)*sin(x21);
		T x23 = sin(param15*x19 + param4*time/sqrt(param1))*cos(x20)*cos(x21);
		T x24 = 0.5*tanh(100*x22 + 100*x23);
		T x25 = x0*x11*x3/udg3;
		T x26 = sqrt(x25);
		T x27 = 0.70710678118654757*sqrt(M_PI)*x26;
		T x28 = x22 + x23;
		T x29 = fabs(x28);
		T x30 = M_SQRT2*x26*x29;
		T x31 = tanh(500*x30 - 8000);
		T x32 = 1.0/x11;
		T x33 = x12*x15*x2*x32*((0.5 - 0.5*x31)*(0.278219155*x30 + 1.0606963)/((1.0/2.0)*x25*pow(x29, 2) + 0.86228044999999998*x30 + 1.0619896) + (0.28249411499999999*x31 + 0.28249411499999999)/((1.0/2.0)*x30 + 0.066518740000000007));
		T x34 = 0.5 - x24;
		T x35 = sqrt(1 - pow(x28, 2));
		T x36 = tanh(100*param10 - 100*x35*xdg1);
		T x37 = 0.5 - 0.5*x36;
		T x38 = param6*(x27*x33*(x24 + 0.5) + x34*(x27*x37*(2*udg3*x12*x2*x32*x4*exp(x25*x34*x37*(1 - x35)) - x33) + 50.0*x36 + 50.0));
		T x39 = tanh(20000.0*uinf84 + 199.99999999999994);
		T x40 = tanh(20000.0*uinf85 + 199.99999999999994);
		T x41 = tanh(20000.0*uinf76 + 199.99999999999994);
		T x42 = tanh(20000.0*uinf77 + 199.99999999999994);
		T x43 = tanh(20000.0*uinf78 + 199.99999999999994);
		T x44 = tanh(20000.0*uinf79 + 199.99999999999994);
		T x45 = tanh(20000.0*uinf80 + 199.99999999999994);
		T x46 = tanh(20000.0*uinf81 + 199.99999999999994);
		T x47 = tanh(20000.0*uinf82 + 199.99999999999994);
		T x48 = tanh(20000.0*uinf86 + 199.99999999999994);
		T x49 = tanh(20000.0*uinf83 + 199.99999999999994);
		T x50 = tanh(20000.0*uinf87 + 199.99999999999994);
		T x51 = tanh(20000.0*uinf88 + 199.99999999999994);
		T x52 = tanh(20000.0*uinf89 + 199.99999999999994);
		T x53 = tanh(20000.0*uinf90 + 199.99999999999994);
		T x54 = tanh(20000.0*uinf91 + 199.99999999999994);
		T x55 = tanh(20000.0*uinf92 + 199.99999999999994);
		T x56 = tanh(20000.0*uinf93 + 199.99999999999994);
		T x57 = tanh(20000.0*uinf94 + 199.99999999999994);
		T x58 = tanh(20000.0*uinf95 + 199.99999999999994);
		T x59 = tanh(20000.0*uinf96 + 199.99999999999994);
		T x60 = tanh(20000.0*uinf97 + 199.99999999999994);
		T x61 = tanh(20000.0*uinf98 + 199.99999999999994);
		T x62 = tanh(20000.0*uinf99 + 199.99999999999994);
		T x63 = tanh(20000.0*uinf100 + 199.99999999999994);
		T x64 = tanh(20000.0*uinf101 + 199.99999999999994);
		T x65 = tanh(20000.0*uinf102 + 199.99999999999994);
		T x66 = tanh(20000.0*uinf103 + 199.99999999999994);
		T x67 = tanh(20000.0*uinf104 + 199.99999999999994);
		T x68 = tanh(20000.0*uinf105 + 199.99999999999994);
		T x69 = tanh(20000.0*uinf106 + 199.99999999999994);
		T x70 = tanh(20000.0*uinf107 + 199.99999999999994);
		T x71 = tanh(20000.0*uinf108 + 199.99999999999994);
		T x72 = tanh(20000.0*uinf109 + 199.99999999999994);
		T x73 = tanh(20000.0*uinf110 + 199.99999999999994);
		T x74 = tanh(20000.0*uinf111 + 199.99999999999994);
		f[0*ng+i] = -x6 + x9*(udg1 - 1);
		f[1*ng+i] = udg2*(0.25*udg2*udg4*x4 - 0.5*x6 - 0.5*x7) + udg3*x10*x8 - udg4*(0.66666666666666663*x14*x16*x4*x9 - 0.33333333333333331*x6) + 1.0*x1*x17*(0.5*udg2*udg4*x4 - x0*x5 - x7) + x3*(pow(param4, 2)*x10*xdg1 - x10*x11*x13);
		f[2*ng+i] = param1*param13*x3*(param1 - 1.0)*(uinf113*uinf39*(-0.40000000000000002*x41 + (20.0*uinf76 + 1)*(0.5*x41 + 0.5) + 0.40000000000000002)*exp(-uinf39*x38)/uinf2 + uinf114*uinf40*(-0.40000000000000002*x42 + (20.0*uinf77 + 1)*(0.5*x42 + 0.5) + 0.40000000000000002)*exp(-uinf40*x38)/uinf3 + uinf115*uinf41*(-0.40000000000000002*x43 + (20.0*uinf78 + 1)*(0.5*x43 + 0.5) + 0.40000000000000002)*exp(-uinf41*x38)/uinf4 + uinf116*uinf42*(-0.40000000000000002*x44 + (20.0*uinf79 + 1)*(0.5*x44 + 0.5) + 0.40000000000000002)*exp(-uinf42*x38)/uinf5 + uinf117*uinf43*(-0.40000000000000002*x45 + (20.0*uinf80 + 1)*(0.5*x45 + 0.5) + 0.40000000000000002)*exp(-uinf43*x38)/uinf6 + uinf118*uinf44*(-0.40000000000000002*x46 + (20.0*uinf81 + 1)*(0.5*x46 + 0.5) + 0.40000000000000002)*exp(-uinf44*x38)/uinf7 + uinf119*uinf45*(-0.40000000000000002*x47 + (20.0*uinf82 + 1)*(0.5*x47 + 0.5) + 0.40000000000000002)*exp(-uinf45*x38)/uinf8 + uinf120*uinf46*(-0.40000000000000002*x49 + (20.0*uinf83 + 1)*(0.5*x49 + 0.5) + 0.40000000000000002)*exp(-uinf46*x38)/uinf9 + uinf124*uinf50*(-0.40000000000000002*x50 + (20.0*uinf87 + 1)*(0.5*x50 + 0.5) + 0.40000000000000002)*exp(-uinf50*x38)/uinf13 + uinf125*uinf51*(-0.40000000000000002*x51 + (20.0*uinf88 + 1)*(0.5*x51 + 0.5) + 0.40000000000000002)*exp(-uinf51*x38)/uinf14 + uinf126*uinf52*(-0.40000000000000002*x52 + (20.0*uinf89 + 1)*(0.5*x52 + 0.5) + 0.40000000000000002)*exp(-uinf52*x38)/uinf15 + uinf127*uinf53*(-0.40000000000000002*x53 + (20.0*uinf90 + 1)*(0.5*x53 + 0.5) + 0.40000000000000002)*exp(-uinf53*x38)/uinf16 + uinf128*uinf54*(-0.40000000000000002*x54 + (20.0*uinf91 + 1)*(0.5*x54 + 0.5) + 0.40000000000000002)*exp(-uinf54*x38)/uinf17 + uinf129*uinf55*(-0.40000000000000002*x55 + (20.0*uinf92 + 1)*(0.5*x55 + 0.5) + 0.40000000000000002)*exp(-uinf55*x38)/uinf18 + uinf130*uinf56*(-0.40000000000000002*x56 + (20.0*uinf93 + 1)*(0.5*x56 + 0.5) + 0.40000000000000002)*exp(-uinf56*x38)/uinf19 + uinf131*uinf57*(-0.40000000000000002*x57 + (20.0*uinf94 + 1)*(0.5*x57 + 0.5) + 0.40000000000000002)*exp(-uinf57*x38)/uinf20 + uinf132*uinf58*(-0.40000000000000002*x58 + (20.0*uinf95 + 1)*(0.5*x58 + 0.5) + 0.40000000000000002)*exp(-uinf58*x38)/uinf21 + uinf133*uinf59*(-0.40000000000000002*x59 + (20.0*uinf96 + 1)*(0.5*x59 + 0.5) + 0.40000000000000002)*exp(-uinf59*x38)/uinf22 + uinf134*uinf60*(-0.40000000000000002*x60 + (20.0*uinf97 + 1)*(0.5*x60 + 0.5) + 0.40000000000000002)*exp(-uinf60*x38)/uinf23 + uinf135*uinf61*(-0.40000000000000002*x61 + (20.0*uinf98 + 1)*(0.5*x61 + 0.5) + 0.40000000000000002)*exp(-uinf61*x38)/uinf24 + uinf136*uinf62*(-0.40000000000000002*x62 + (20.0*uinf99 + 1)*(0.5*x62 + 0.5) + 0.40000000000000002)*exp(-uinf62*x38)/uinf25 + uinf137*uinf63*(-0.40000000000000002*x63 + (20.0*uinf100 + 1)*(0.5*x63 + 0.5) + 0.40000000000000002)*exp(-uinf63*x38)/uinf26 + uinf138*uinf64*(-0.40000000000000002*x64 + (20.0*uinf101 + 1)*(0.5*x64 + 0.5) + 0.40000000000000002)*exp(-uinf64*x38)/uinf27 + uinf139*uinf65*(-0.40000000000000002*x65 + (20.0*uinf102 + 1)*(0.5*x65 + 0.5) + 0.40000000000000002)*exp(-uinf65*x38)/uinf28 + uinf140*uinf66*(-0.40000000000000002*x66 + (20.0*uinf103 + 1)*(0.5*x66 + 0.5) + 0.40000000000000002)*exp(-uinf66*x38)/uinf29 + uinf141*uinf67*(-0.40000000000000002*x67 + (20.0*uinf104 + 1)*(0.5*x67 + 0.5) + 0.40000000000000002)*exp(-uinf67*x38)/uinf30 + uinf142*uinf68*(-0.40000000000000002*x68 + (20.0*uinf105 + 1)*(0.5*x68 + 0.5) + 0.40000000000000002)*exp(-uinf68*x38)/uinf31 + uinf143*uinf69*(-0.40000000000000002*x69 + (20.0*uinf106 + 1)*(0.5*x69 + 0.5) + 0.40000000000000002)*exp(-uinf69*x38)/uinf32 + uinf144*uinf70*(-0.40000000000000002*x70 + (20.0*uinf107 + 1)*(0.5*x70 + 0.5) + 0.40000000000000002)*exp(-uinf70*x38)/uinf33 + uinf145*uinf71*(-0.40000000000000002*x71 + (20.0*uinf108 + 1)*(0.5*x71 + 0.5) + 0.40000000000000002)*exp(-uinf71*x38)/uinf34 + uinf146*uinf72*(-0.40000000000000002*x72 + (20.0*uinf109 + 1)*(0.5*x72 + 0.5) + 0.40000000000000002)*exp(-uinf72*x38)/uinf35 + uinf147*uinf73*(-0.40000000000000002*x73 + (20.0*uinf110 + 1)*(0.5*x73 + 0.5) + 0.40000000000000002)*exp(-uinf73*x38)/uinf36 + uinf148*uinf74*(-0.40000000000000002*x74 + (20.0*uinf111 + 1)*(0.5*x74 + 0.5) + 0.40000000000000002)*exp(-uinf74*x38)/uinf37 + uinf123*uinf49*(-0.40000000000000002*x48 + (20.0*uinf86 + 1)*(0.5*x48 + 0.5) + 0.40000000000000002)*exp(-uinf49*x38)/uinf12 + uinf122*uinf48*(-0.40000000000000002*x40 + (20.0*uinf85 + 1)*(0.5*x40 + 0.5) + 0.40000000000000002)*exp(-uinf48*x38)/uinf11 + uinf121*uinf47*(-0.40000000000000002*x39 + (20.0*uinf84 + 1)*(0.5*x39 + 0.5) + 0.40000000000000002)*exp(-uinf47*x38)/uinf10 + uinf112*uinf38*(-0.40000000000000002*x18 + (20.0*uinf75 + 1)*(0.5*x18 + 0.5) + 0.40000000000000002)*exp(-uinf38*x38)/uinf1)/param5 + 1.3333333333333333*param1*x17*(param1 - 1)*(0.5*param14*pow(udg2, 2)*x13*(3 - param14)*exp(-udg1) - x6*x9 + pow(x9, 2)) + udg2*x1*x15*(0.5 - param1) + udg3*x9*(1.5 - param1) + pow(x15, 0.75)*x4*sqrt(param1/param2)*(x1 - x8)*(-udg6*x4 + x15*x8)/param3;
		i += blockDim.x * gridDim.x;
	}
}

template <typename T> __global__ void kernelgpuSource(T *f, T *xdg, T *udg, T *odg, T *wdg, T *uinf, T *param, T time, int modelnumber, int ng, int nc, int ncu, int nd, int ncx, int nco, int ncw)
{
	devicegpuSource(f, xdg, udg, odg, wdg, uinf, param, time, modelnumber, ng, nc, ncu, nd, ncx, nco, ncw);
}

template <typename T> void gpuSource(T *f, T *xdg, T *udg, T *odg, T *wdg, T *uinf, T *param, T time, int modelnumber, int ng, int nc, int ncu, int nd, int ncx, int nco, int ncw)
{
	int blockDim = 256;
	int gridDim = (ng + blockDim - 1) / blockDim;
	gridDim = (gridDim>1024)? 1024 : gridDim;
	kernelgpuSource<<<gridDim, blockDim>>>(f, xdg, udg, odg, wdg, uinf, param, time, modelnumber, ng, nc, ncu, nd, ncx, nco, ncw);
}

template void gpuSource(double *, double *, double *, double *, double *, double *, double *, double, int, int, int, int, int, int, int, int);
template void gpuSource(float *, float *, float *, float *, float *, float *, float *, float, int, int, int, int, int, int, int, int);
